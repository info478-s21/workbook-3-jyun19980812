group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0) #%>%
# Import and read the data through raw csv file.
climate_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv") %>%
# Processing the data.
# Calculating average co2 emission across all countries to compare.
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
# Import and read the data through raw csv file.
climate_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv")
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(co2), 0) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2), 0) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2$co2), 0) #%>%
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(highest_co2$co2), 0)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
#replace(is.na(highest_co2$co2), 0) #%>%
filter(co2 == max(co2)) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
#replace(is.na(highest_co2$co2), 0) #%>%
filter(co2 == max(co2, na.rm = T)) #%>%
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
#replace(is.na(highest_co2$co2), 0) #%>%
filter(co2 == max(co2, na.rm = T))
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != ("" | "OWID_WRL")) %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != ("" || "OWID_WRL")) %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" || "OWID_WRL") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" || iso_code != "OWID_WRL") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" || country != "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
View(highest_co2)
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" && country != "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) #%>%
View(highest_co2)
View(average_ghg)
average_ghg <- climate_data %>%
group_by(country) %>%
summarize(total_ghg = round(mean(total_ghg, na.rm = T), digits = 5)) %>%
replace(is.na(average_ghg), 0)
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
# Calculating average greenhouse gas emission across all countries to compare.
average_ghg <- climate_data %>%
group_by(country) %>%
summarize(total_ghg = round(mean(total_ghg, na.rm = T), digits = 5)) %>%
replace(is.na(average_ghg), 0)
# Import and read the data through raw csv file.
climate_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv") %>%
as.data.frame()
View(climate_data)
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
# Import and read the data through raw csv file.
climate_data <- read.csv("https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv") %>%
as.data.frame.matrix()
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
View(climate_data)
# Processing the data.
# Calculating average co2 emission across all countries to compare.
average_co2 <- climate_data %>%
as.data.frame.matrix(climate_data) %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
replace(is.na(average_co2), 0)
# Calculating average greenhouse gas emission across all countries to compare.
average_ghg <- climate_data %>%
group_by(country) %>%
summarize(total_ghg = round(mean(total_ghg, na.rm = T), digits = 5)) %>%
na.omit()
View(average_ghg)
# Processing the data.
# Calculating average co2 emission across all countries to compare.
average_co2 <- climate_data %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit()
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit() %>%
filter(co2 == max(co2, na.rm = T)) #%>%
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" || country == "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit() %>%
filter(co2 == max(co2, na.rm = T)) #%>%
View(highest_co2)
View(highest_co2)
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" || country != "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit() %>%
filter(co2 == max(co2, na.rm = T)) #%>%
View(highest_co2)
highest_co2 <- climate_data %>%
filter(iso_code != "" || country != "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit() %>%
filter(co2 == max(co2, na.rm = T))
View(highest_co2)
# Find out which country has the highest and lowest co2 emission
highest_co2 <- climate_data %>%
filter(iso_code != "" && country != "World") %>%
group_by(country) %>%
summarize(co2 = round(mean(co2, na.rm = T), digits = 5)) %>%
na.omit() %>%
filter(co2 == max(co2, na.rm = T)) #%>%
View(highest_co2)
# Find out on which year had the highest percentage change in Co2 emissions
highest_percentage_Co2 <- climate_data %>%
group_by(year) %>%
summarize(co2_growth_prct = max(co2_growth_prct))
View(highest_percentage_Co2)
# Find out on which year had the highest percentage change in Co2 emissions
highest_percentage_Co2 <- climate_data %>%
filter(co2_growth_prct == max(co2_growth_prct, na.rm = T))
View(highest_percentage_Co2)
# Find out on which year each countries had the highest percentage change in Co2 emissions
highest_percentage_Co2 <- climate_data %>%
group_by(country) %>%
summarize(co2_growth_prct = max(co2_growth_prct, na.rm = T))
highest_percentage_Co2 <- climate_data %>%
group_by(country) %>%
summarize(co2_growth_prct = max(co2_growth_prct, na.rm = T))
View(highest_percentage_Co2)
# Find out on which year each countries had the highest percentage change in Co2 emissions
highest_percentage_Co2 <- climate_data %>%
group_by(country) %>%
filter(all_vars(!is.infinite(.))) %>%
summarize(co2_growth_prct = max(co2_growth_prct, na.rm = T))
# Find out on which year each countries had the highest percentage change in Co2 emissions
highest_percentage_Co2 <- climate_data %>%
group_by(country) %>%
filter(co2_growth_prct(!is.infinite(.))) %>%
summarize(co2_growth_prct = max(co2_growth_prct, na.rm = T))
shiny::runApp('C:/Users/jwyoon/Desktop/info201/a4-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/a4-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/a4-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
?colnames
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
runApp('C:/Users/jwyoon/Desktop/info201/project-jyun19980812')
sqrt(((0.021 * 0.979) / 1655) + ((0.012 * 0.988) / 1652))
1.96 * sqrt(((0.021 * 0.979) / 1655) + ((0.012 * 0.988) / 1652))
0.009 + 1.96 * sqrt(((0.021 * 0.979) / 1655) + ((0.012 * 0.988) / 1652))
0.009 - 1.96 * sqrt(((0.021 * 0.979) / 1655) + ((0.012 * 0.988) / 1652))
42/92
1-0.4565
30/117
1-0.2564
choose(100,5)
choose(52,5)
0.7*0.95
0.3*0.6
0.665+0.18
0.18 / 0.845
0.45^25
0.45^25 + 0.55^0
0.55^0
0.45^25 * 0.55^0* 1
0.4 + 0.9+0.8+0.1
4/52
48/52
0.9231*10
.769-.9231
0.145 + 0.145 - 0.012
7+28+35
7+28+35+53+62+115
70/300
7/60
35 / 300
(150 / 300) * (70 / 300)
27 / sqrt(36)
choose(6, 3)
0.15*0.15*0.15
89100 / 99000
145 / 150
4/50
46/50
0.92*0.08
sqrt((0.92*0.08) / 50)
1/sqrt(50)
1.96 * 0.0384
0.08 + 0.075
0.08 - 0.075
500*(125/500)
sqrt(((125/500)*(375/500)) / 500)
125/500
375/500
0.25*0.75
sqrt(0.1875 / 500)
# Set up - make sure to set your working directory using RStudio
library(tidyverse)
setwd("C:/Users/jwyoon/Desktop/Info478/workbook-3-jyun19980812")
# Create the `charts/` directory (you can do this from R!)
dir.create("charts", showWarnings = FALSE)
# Prep data
# Set up - make sure to set your working directory using RStudio
library(tidyr)
library(dplyr)
library(readxl)
# Load HALE data
hale <- read.csv("./data/raw/hale.csv", stringsAsFactors = FALSE) %>%
rename(hale = val) %>%
select(location_id, year, hale)
# Load life expectancy data
life_expectancy <- read.csv(
"./data/raw/life_expectancy.csv",
stringsAsFactors = FALSE
) %>%
rename(le = val) %>%
select(location_id, year, le)
# Load DALY data
dalys <- read.csv("./data/raw/dalys.csv", stringsAsFactors = FALSE) %>%
rename(dalys = val) %>%
select(location_id, year, dalys)
# Join data
all_data <- life_expectancy %>%
left_join(hale, by = c("year", "location_id")) %>%
left_join(dalys, by = c("year", "location_id"))
# Load hierarchy of locations (to exclude estimates at aggregate levels)
location_hierarchy <- read_excel("./data/raw/location_hierarchy.XLSX") %>%
filter(level == 3) %>% # only country level
select(location_id, location_name)
# Merge data, exclude aggregate locations
prepped <- left_join(location_hierarchy, all_data, by = "location_id") %>%
select(location_name, year, hale, le, dalys)
# Create `data/prepped/` folder
dir.create("data/prepped", showWarnings = FALSE)
# Write data
write.csv(prepped, "./data/prepped/all_data.csv", row.names = FALSE)
# Load prepped data
health_data <- read.csv("data/prepped/all_data.csv")
View(health_data)
data_2016 <- health_data %>%
filter(year == 2016)
View(data_2016)
ggplot(data_2016) +
geom_point(mapping = aes(x = le, y = hale))
cor(data2016$hale, data_2016$le)
cor(data_2016$hale, data_2016$le)
ggplot(data_2016) +
geom_point(mapping = aes(x = le, y = hale)) +
labs(title = "Life Expectancy vs HALE",
x = "Life Expectancy",
y = "HALE")
ggsave("chart/le_hale_graph.png")
ggplot(data_2016) +
geom_point(mapping = aes(x = le, y = hale)) +
labs(title = "Life Expectancy vs HALE",
x = "Life Expectancy",
y = "HALE")
ggsave("chart/le_hale_graph.png")
ggplot(data_2016) +
geom_point(mapping = aes(x = dalys, y = hale)) +
labs(title = "DALYS vs HALE",
x = "DALY",
y = "HALE")
cor(data_2016$dalys, data_2016$hale)
ggsave("chart/dalys_hale_graph.png")
Sys.setenv(LANG = "en")\
Sys.setenv(LANG = "en")
ggsave("chart/dalys_hale_graph.png")
# Create the `charts/` directory (you can do this from R!)
dir.create("charts", showWarnings = FALSE)
ggsave("chart/dalys_hale_graph.png")
data_wide <- health_data %>%
pivot_wider(names_from = year,
values_from = c(hale, le, dalys))
# Create columns to store the change in life expectancy, and change in hale
data_wide <- data_wide %>%
mutate(hale_diff = hale_2016 - hale_1990,
le_diff = le_2016 - le_1990)
View(data_wide)
ggplot(data_wide) +
geom_point(mapping = aes(x = le_diff, y = hale_diff)) +
labs(title = "Life Expectancy difference vs HALE difference",
x = "Change in Life Expectancy",
y = "Change in HALE")
ggplot(data_wide) +
geom_point(mapping = aes(x = le_diff, y = hale_diff)) +
labs(title = "Life Expectancy difference vs HALE difference",
x = "Change in Life Expectancy",
y = "Change in HALE") +
geom_abline(intercept = 0, slope = 1)
ggsave("chart/dalys_hale_graph.png")
ggsave("chart/dalys_hale_graph.png")
ggsave("chart/le_hale_graph.png")
